[tasks.format]
description = "Format all source files."
command = "prettier"
args = ["--write", "**/*.rs"]

[tasks.format-check]
description = "Check all source files for formatting issues."
command = "prettier"
args = ["--check", "**/*.rs"]

[tasks.lint]
description = "Lint all source files."
install_crate = { rustup_component_name = "clippy" }
command = "cargo"
args = ["clippy", "--", "-D", "clippy::all"]

[tasks.lint-extra]
description = "Lint all source files."
install_crate = { rustup_component_name = "clippy" }
command = "cargo"
args = [
    "clippy",
    "--",
    "-D",
    "clippy::all",
    "-W",
    "clippy::pedantic",
    "-W",
    "clippy::cargo",
    "-W",
    "clippy::nursery",
]

[tasks.lint-watch]
description = "Monitor and lint all source files continuously anytime one of them changes."
dependencies = ["lint"]
watch = true

[tasks.clean]
description = "Clean up temporary files generated by the Rust compiler."
command = "cargo"
args = ["clean"]

[tasks.build]
description = "Compile the source code."
command = "cargo"
args = ["build"]
dependencies = ["lint"]

[tasks.run]
description = "Run the application."
env = { RUST_BACKTRACE = 1 }
command = "cargo"
args = ["run"]
dependencies = ["build"]

[tasks.test]
description = "Runs all integration tests."
command = "cargo"
args = ["test", "--", "--ignored"]
dependencies = ["test-exclude-ignored"]

[tasks.test-exclude-ignored]
description = "Runs integration tests without ignored ones."
command = "cargo"
args = ["test"]
dependencies = ["build","app"]

[tasks.app]
description = "Starts webapp."
script = { file = "webapp.sh" }


[tasks.test-coverage]
description = "Run code coverage analysis and write a tabulated report to STDOUT."
install_crate = "cargo-llvm-cov"
command = "cargo"
args = ["llvm-cov"]
dependencies = ["build"]

[tasks.test-coverage-ci]
description = "Run code coverage analysis and write a report to a text file in LCOV format."
install_crate = "cargo-llvm-cov"
command = "cargo"
args = ["llvm-cov", "--lcov", "--output-path", "lcov.info"]
dependencies = ["build"]
